{"version":3,"sources":["lol_uniq/data/TierGrade.js","lol_uniq/dto/MemberInfo.js","lol_uniq/view/MemberList.js","lol_uniq/data/DefaultMember.js","App.js","serviceWorker.js","index.js"],"names":["mainTier","tierName","tierPoint","weight","MemberInfo","isUpdated","getUserData","instance","nickname","key","a","undefined","console","log","this","get","summonerData","data","accountId","matchData","id","leagueData","props","memberInfo","summoner","match","name","tier","find","e","queueType","rank","point","getPoint","setState","error","str","split","TierGrade","number","position","listType","onClick","ApiInfo","url","axios","create","baseURL","style","border","padding","margin","Component","defaultProps","isSelected","MemberList","members","list","map","DefaultMember","App","state","searchKeyword","selectedMembers","leftTeamMembers","rightTeamMembers","leftTeamPoint","rightTeamPoint","selectedIndexs","handleChange","target","value","handleUpdate","handleUserInfoClick","concat","filter","addUser","mixMember","length","originMembers","quickSort","addRandomMember","distributeMember","i","highIndex","lowIndex","getAveragePoint","team","index","min","Math","ceil","max","floor","count","randomIndex","random","slice","pivot","leftCursor","rightCursor","left","splice","mid","right","defaultMemberInfo","filteredList","toLowerCase","replace","resultList","indexOf","placeholder","onChange","onUpdate","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f20316d8.chunk.js","sourcesContent":["const mainTier = [\n  {\n    tierName: 'IRON',\n    tierPoint: 100,\n    weight: 50,\n  },\n  {\n    tierName: 'BRONZE',\n    tierPoint: 300,\n    weight: 50,\n  },\n  {\n    tierName: 'SILVER',\n    tierPoint: 500,\n    weight: 50,\n  },\n  {\n    tierName: 'GOLD',\n    tierPoint: 700,\n    weight: 60,\n  },\n  {\n    tierName: 'PLATINUM',\n    tierPoint: 1000,\n    weight: 100,\n  },\n  {\n    tierName: 'DIAMOND',\n    tierPoint: 1500,\n    weight: 100,\n  },\n  {\n    tierName: 'MASTER',\n    tierPoint: 2000,\n    weight: 100,\n  },\n  {\n    tierName: 'GRANDMASTER',\n    tierPoint: 2500,\n    weight: 100,\n  },\n  {\n    tierName: 'CHALLENGER',\n    tierPoint: 3000,\n    weight: 100,\n  },\n];\nexport default mainTier;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TierGrade from '../data/TierGrade';\n\nclass MemberInfo extends Component {\n  static defaultProps = {\n    // 기본값 설정\n    memberInfo: {\n      nickname: '',\n      tier: '',\n      position: '',\n      key: '',\n      summoner: '',\n      match: '',\n      isSelected: 'false',\n      point: '0',\n    },\n  };\n\n  isUpdated = false;\n\n  getUserData = async function(instance, nickname, key) {\n    if (nickname !== undefined && nickname !== '') {\n      console.log(nickname + '/' + this.isUpdated);\n      if (this.isUpdated) {\n        return;\n      }\n\n      this.isUpdated = true;\n\n      try {\n        const summonerData = await instance.get(\n          `/summoner/v4/summoners/by-name/${nickname}?api_key=${key}`,\n        );\n        const matchData = await instance.get(\n          `/match/v4/matchlists/by-account/${summonerData.data.accountId}?api_key=${key}`,\n        );\n        const leagueData = await instance.get(\n          `/league/v4/entries/by-summoner/${summonerData.data.id}?api_key=${key}`,\n        );\n        this.props.memberInfo.summoner = summonerData.data;\n        this.props.memberInfo.match = matchData.data;\n\n        this.props.memberInfo.nickname = summonerData.data.name;\n        this.props.memberInfo.tier =\n          leagueData.data.find(e => {\n            return e.queueType === 'RANKED_SOLO_5x5';\n          }) === undefined\n            ? 'UNRANKED'\n            : leagueData.data.find(e => {\n                return e.queueType === 'RANKED_SOLO_5x5';\n              }).tier +\n              ' ' +\n              leagueData.data.find(e => {\n                return e.queueType === 'RANKED_SOLO_5x5';\n              }).rank;\n\n        this.props.memberInfo.point = this.getPoint(this.props.memberInfo.tier);\n\n        this.setState({});\n        console.log(summonerData);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  getPoint = tierName => {\n    const str = tierName.split(' ');\n    const tier = TierGrade.find(function(e) {\n      return e.tierName === str[0];\n    });\n    const number =\n      str[1] === 'I' ? 0 : str[1] === 'II' ? 1 : str[1] === 'III' ? 2 : 3;\n    return 1 * tier.tierPoint + tier.weight * number;\n  };\n\n  render() {\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px',\n    };\n\n    const { tier, position, key, summoner, match } = this.props.memberInfo;\n\n    const { listType } = this.props;\n    const { onClick } = this.props;\n\n    if (listType === '1' && this.isUpdated === false) {\n      const ApiInfo = {\n        url: '/lol',\n        key: 'RGAPI-87666eee-0ab1-48bd-a5fb-9e4d1f1ffdcf',\n      };\n      ApiInfo.instance = axios.create({ baseURL: ApiInfo.url });\n\n      this.getUserData(\n        ApiInfo.instance,\n        this.props.memberInfo.nickname,\n        ApiInfo.key,\n      );\n    }\n\n    const { nickname } = this.props.memberInfo;\n\n    return (\n      <div style={style} onClick={() => onClick(key, listType)}>\n        <div>\n          <b>\n            {listType === '1' && nickname === ''\n              ? '참여 멤버를 추가해주세요'\n              : nickname}\n          </b>\n        </div>\n        {listType !== '0' ? <div>{tier}</div> : null}\n        {listType !== '0' ? <div>{position}</div> : null}\n      </div>\n    );\n  }\n}\n\nexport default MemberInfo;\n","import React, { Component } from 'react';\nimport MemberInfo from '../dto/MemberInfo';\n\nclass MemberList extends Component {\n  static defaultProps = {\n    members: [],\n    listType: '0', // 0 : 대기 명단, 1 : 참여 명단\n  };\n\n  render() {\n    const { members, onClick, listType } = this.props;\n\n    let list = members.map(memberInfo => (\n      <MemberInfo\n        key={memberInfo.key}\n        memberInfo={memberInfo}\n        onClick={onClick}\n        listType={listType}\n      />\n    ));\n\n    return <div>{list}</div>;\n  }\n}\n\nexport default MemberList;\n","class DefaultMember {\n  static members = [\n    {\n      nickname: 'Uniq R Jungler',\n      tier: '',\n      position: '',\n      key: '0',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R 연희',\n      tier: '',\n      position: '',\n      key: '1',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R Younggak',\n      tier: '',\n      position: '',\n      key: '2',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R 천재미드',\n      tier: '',\n      position: '',\n      key: '3',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R 한라봉',\n      tier: '',\n      position: '',\n      key: '4',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R J',\n      tier: '',\n      position: '',\n      key: '5',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R 로이드',\n      tier: '',\n      position: '',\n      key: '6',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R 길동',\n      tier: '',\n      position: '',\n      key: '7',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R Give',\n      tier: '',\n      position: '',\n      key: '8',\n      summoner: '',\n      match: '',\n    },\n    {\n      nickname: 'Uniq R NoChat',\n      tier: '',\n      position: '',\n      key: '9',\n      summoner: '',\n      match: '',\n    },\n  ];\n}\n\nexport default DefaultMember;\n","import React, { Component } from 'react';\nimport MemberList from './lol_uniq/view/MemberList';\nimport DefaultMember from './lol_uniq/data/DefaultMember';\n\nclass App extends Component {\n  key = '10';\n  state = {\n    members: DefaultMember.members,\n    searchKeyword: '',\n    selectedMembers: [],\n    leftTeamMembers: [],\n    rightTeamMembers: [],\n    leftTeamPoint: '',\n    rightTeamPoint: '',\n  };\n  selectedIndexs = [];\n\n  handleChange = e => {\n    this.setState({\n      searchKeyword: e.target.value,\n    });\n  };\n\n  handleUpdate = (key, data) => {\n    const { members } = this.state;\n    this.setState({\n      members: members.map(memberInfo =>\n        key === memberInfo.key ? { ...memberInfo, ...data } : memberInfo,\n      ),\n    });\n  };\n\n  handleUserInfoClick = (key, listType) => {\n    console.log('handleUserInfoClick listType = ' + listType);\n\n    const { members, selectedMembers } = this.state;\n\n    listType === '0'\n      ? this.setState({\n          selectedMembers: selectedMembers.concat(\n            members.filter(memberInfo => memberInfo.key === key),\n          ),\n\n          members: members.filter(memberInfo => memberInfo.key !== key),\n        })\n      : this.setState({\n          members: members.concat(\n            selectedMembers.filter(memberInfo => memberInfo.key === key),\n          ),\n\n          selectedMembers: selectedMembers.filter(\n            memberInfo => memberInfo.key !== key,\n          ),\n        });\n  };\n\n  addUser = nickname => {\n    console.log('addUser ' + nickname);\n\n    const { members } = this.state;\n\n    this.setState({\n      members: members.concat({\n        nickname: nickname,\n        key: this.key++,\n      }),\n    });\n  };\n\n  mixMember = () => {\n    console.log('mixMember');\n    let { selectedMembers } = this.state;\n\n    if (selectedMembers.length !== 10) {\n      return;\n    }\n\n    let leftTeamMembers = [];\n    let rightTeamMembers = [];\n    this.selectedIndexs = [\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n      false,\n    ];\n    let originMembers = selectedMembers.map(memberInfo => memberInfo);\n\n    //1. 선택된 멤버들을 가중치별로 정렬\n    selectedMembers = this.quickSort(selectedMembers);\n\n    //2. 각 팀당 임의의 2명을 할당\n    leftTeamMembers = this.addRandomMember(selectedMembers, leftTeamMembers);\n    leftTeamMembers = this.addRandomMember(selectedMembers, leftTeamMembers);\n    rightTeamMembers = this.addRandomMember(selectedMembers, rightTeamMembers);\n    rightTeamMembers = this.addRandomMember(selectedMembers, rightTeamMembers);\n\n    // 3. 각 팀의 평균 점수를 비교하여 낮은 팀이 가장 높은 점수의 대기 선수를 가져간다.\n    this.distributeMember(\n      selectedMembers,\n      originMembers,\n      leftTeamMembers,\n      rightTeamMembers,\n    );\n  };\n\n  distributeMember = (\n    members,\n    originMembers,\n    leftTeamMembers,\n    rightTeamMembers,\n  ) => {\n    if (leftTeamMembers.length >= 5 && rightTeamMembers.length >= 5) {\n      let leftTeamPoint = 0;\n      let rightTeamPoint = 0;\n\n      for (let i = 0; i < 5; i++) {\n        leftTeamPoint += leftTeamMembers[i].point;\n        rightTeamPoint += rightTeamMembers[i].point;\n      }\n\n      this.setState({\n        selectedMembers: originMembers,\n        leftTeamMembers: leftTeamMembers,\n        rightTeamMembers: rightTeamMembers,\n        leftTeamPoint: leftTeamPoint / 5,\n        rightTeamPoint: rightTeamPoint / 5,\n      });\n      return;\n    }\n    let highIndex = members.length - 1;\n    for (let i = highIndex; i >= 0; i--) {\n      if (!this.selectedIndexs[i]) {\n        this.selectedIndexs[i] = true;\n        highIndex = i;\n        break;\n      }\n    }\n\n    let lowIndex = highIndex - 1;\n\n    for (let i = highIndex - 1; i >= 0; i--) {\n      if (!this.selectedIndexs[i]) {\n        this.selectedIndexs[i] = true;\n        lowIndex = i;\n        break;\n      }\n    }\n\n    if (\n      this.getAveragePoint(leftTeamMembers) <=\n      this.getAveragePoint(rightTeamMembers)\n    ) {\n      leftTeamMembers = leftTeamMembers.concat(members[highIndex]);\n      rightTeamMembers = rightTeamMembers.concat(members[lowIndex]);\n    } else {\n      rightTeamMembers = rightTeamMembers.concat(members[highIndex]);\n      leftTeamMembers = leftTeamMembers.concat(members[lowIndex]);\n    }\n\n    this.distributeMember(\n      members,\n      originMembers,\n      leftTeamMembers,\n      rightTeamMembers,\n    );\n  };\n\n  getAveragePoint = team => {\n    let point = 0;\n    let index;\n    for (index = 0; index < team.length; index++) {\n      point += team[index].point;\n    }\n    return point / team.length;\n  };\n\n  addRandomMember = (selectedMembers, team) => {\n    const min = Math.ceil(0);\n    let max = Math.floor(10);\n    let count = 0;\n\n    while (count < 10) {\n      let randomIndex = Math.floor(Math.random() * (max - min)) + min; //최댓값은 제외, 최솟값은 포함\n      if (this.selectedIndexs[randomIndex] === false) {\n        team = team.concat(selectedMembers[randomIndex]);\n\n        this.selectedIndexs = [\n          ...this.selectedIndexs.slice(0, randomIndex),\n          true,\n          ...this.selectedIndexs.slice(randomIndex + 1),\n        ];\n        break;\n      }\n      count++;\n    }\n\n    return team;\n  };\n\n  /**\n   * @see https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html\n   */\n  quickSort = memberInfo => {\n    if (memberInfo.length < 2) return memberInfo;\n\n    const pivot = memberInfo[0].point;\n\n    let leftCursor = 1;\n    let rightCursor = memberInfo.length - 1;\n    while (leftCursor <= rightCursor) {\n      // 왼쪽수가 기준보다 크고 오른쪽 수가 기준보다 작으면 위치를 바꿉니다 (swap)\n      if (\n        memberInfo[leftCursor].point > pivot &&\n        memberInfo[rightCursor].point < pivot\n      ) {\n        [memberInfo[leftCursor], memberInfo[rightCursor]] = [\n          memberInfo[rightCursor],\n          memberInfo[leftCursor],\n        ];\n        leftCursor++;\n        rightCursor--;\n      }\n\n      // 왼쪽 수는 기준보다 작으면 다음으로 넘어가고, 크면 가만히 있습니다\n      if (memberInfo[leftCursor].point <= pivot) {\n        leftCursor++;\n      }\n\n      // 오른쪽 수는 기준보다 크면 다음으로 넘어가고, 작으면 가만히\n      if (memberInfo[rightCursor].point >= pivot) {\n        rightCursor--;\n      }\n    }\n\n    [memberInfo[0], memberInfo[leftCursor - 1]] = [\n      memberInfo[leftCursor - 1],\n      memberInfo[0],\n    ];\n    const left = memberInfo.splice(0, leftCursor - 1);\n    const mid = memberInfo.splice(0, 1);\n    const right = memberInfo;\n\n    return [...this.quickSort(left), ...mid, ...this.quickSort(right)];\n  };\n\n  render() {\n    const {\n      members,\n      selectedMembers,\n      searchKeyword,\n      leftTeamMembers,\n      rightTeamMembers,\n      leftTeamPoint,\n      rightTeamPoint,\n    } = this.state;\n\n    let defaultMemberInfo = [\n      {\n        nickname: `${this.state.searchKeyword}은(는) 클랜원 리스트에 없습니다.`,\n        tier: '',\n        position: '',\n        key: '0',\n        listType: '0',\n      },\n    ];\n\n    let defaultSelectedMemberInfo = [\n      {\n        nickname: '',\n        tier: '',\n        position: '',\n        key: '0',\n        listType: '1',\n      },\n    ];\n\n    //lowercase, blank 제거\n    const filteredList = members.map(memberInfo =>\n      memberInfo.nickname.toLowerCase().replace(/\\s/g, ''),\n    );\n\n    //검색 결과 리스트\n    const resultList = members.filter(\n      memberInfo =>\n        filteredList[members.indexOf(memberInfo)].indexOf(\n          searchKeyword.toLowerCase().replace(/\\s/g, ''),\n        ) !== -1,\n    );\n\n    return (\n      <div>\n        <p>\n          <input\n            placeholder=\"소환사명 입력\"\n            onChange={this.handleChange}\n            value={searchKeyword}\n          />\n          <button onClick={() => this.addUser(searchKeyword)}>추가</button>\n        </p>\n        <hr />\n        <h2>대기 명단</h2>\n        <MemberList\n          members={resultList.length === 0 ? defaultMemberInfo : resultList}\n          onUpdate={() => this.handleUpdate()}\n          onClick={this.handleUserInfoClick}\n          listType=\"0\"\n        />\n        <h2>참여 명단 {selectedMembers.length}명</h2>\n        <MemberList\n          members={\n            selectedMembers.length === 0\n              ? defaultSelectedMemberInfo\n              : selectedMembers\n          }\n          onUpdate={() => this.handleUpdate()}\n          onClick={this.handleUserInfoClick}\n          listType=\"1\"\n        />\n        <button onClick={this.mixMember}>팀 매칭</button>\n        <h2>왼쪽 팀</h2>\n        {leftTeamPoint !== '' ? <p>{leftTeamPoint}</p> : null}\n        <MemberList listType=\"2\" members={leftTeamMembers} />\n        <h2>오른쪽 팀</h2>\n        {rightTeamPoint !== '' ? <p>{rightTeamPoint}</p> : null}\n        <MemberList listType=\"2\" members={rightTeamMembers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}